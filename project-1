-- i have worked as a sql developer and data analyst for a online shopping website,
--i used to help for marketing team to improve sales and inventory
--we used to manage databases and improve sales by maintaing data quality
--helping marketing team to identify sales made on daily weekly and monthly bases

-- in these the tables are created in the database followed by data insertion into tables and exploration
--noticing relationships between tables, walking through the columns, and seeing comments
--Records are displayed in an ordered manner, handling NULL values, and selecting records based on patterns like
--Wildcard, Operators, etc. Then working on Data Manipulation commands(DML) for Data Analysis
--then taking Backup of the Table where migration is going on and use COMMIT and ROLLBACK commands

--understanding different types of joins(left join, right join,full join,self join)
--different types of operation (union,union all,intersect)

##where
The WHERE clause is used to filter records.
It is used to extract only those records that fulfill a specified condition.
-- find the employees details whose postalcode is 98401
select * from employees
where postalcode='98401'

##order by
The ORDER BY keyword is used to sort the result-set in ascending or descending order.
--list down the employee name in acending order--
SELECT firstname||''||lastname
from  employees
ORDER BY firstname,lastname;

##like
The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.

-- find the employees whose city starts with 'UK'--
select firstname,lastname,country
from employees
where country like 'UK%'

##delete
---- The DELETE command is used to delete existing records in a table.
DELETE FROM Customers WHERE CustomerName='Alfreds Futterkiste';

##distinct
The SELECT DISTINCT statement is used to return only distinct (different) values.
SELECT DISTINCT Country FROM Customers;

## NULL function

---NULL is used in SQL to indicate that a value doesn't exist in the database.

SELECT ProductName, UnitPrice * (UnitsInStock + UnitsOnOrder)
FROM Products;


